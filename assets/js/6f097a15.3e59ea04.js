"use strict";(self.webpackChunkpub_build=self.webpackChunkpub_build||[]).push([[8892],{9862:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>l,default:()=>o,frontMatter:()=>d,metadata:()=>c,toc:()=>t});var r=n(1085),i=n(1184);const d={title:"Deserialized",last_update:{date:"9/3/2024",author:"Automation"}},l=void 0,c={id:"serde/classes/Deserialized",title:"Deserialized",description:"DBPF.js v1.0.7 \u2022 Docs",source:"@site/docs/serde/classes/Deserialized.md",sourceDirName:"serde/classes",slug:"/serde/classes/Deserialized",permalink:"/DBPF.js/docs/serde/classes/Deserialized",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:17253216e5,frontMatter:{title:"Deserialized",last_update:{date:"9/3/2024",author:"Automation"}}},h={},t=[{value:"Constructors",id:"constructors",level:2},{value:"new Deserialized()",id:"new-deserialized",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"filepath",id:"filepath",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"log / _name",id:"log--name",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"from()",id:"from",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Accessors",id:"accessors",level:2},{value:"json",id:"json",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"load()",id:"load",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"save()",id:"save",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"read()",id:"read",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/DBPF.js/docs/API",children:(0,r.jsx)(s.strong,{children:"DBPF.js v1.0.7"})})," \u2022 ",(0,r.jsx)(s.strong,{children:"Docs"})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/DBPF.js/docs/API",children:"DBPF.js v1.0.7"})," / ",(0,r.jsx)(s.a,{href:"/DBPF.js/docs/serde/",children:"serde"})," / Deserialized"]}),"\n",(0,r.jsx)(s.h1,{id:"class-deserialized",children:"Class: Deserialized"}),"\n",(0,r.jsx)(s.p,{children:"A class for deserializing JSON files."}),"\n",(0,r.jsx)(s.p,{children:"Based on how deserialization is implemented in the Rust programming language."}),"\n",(0,r.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsx)(s.h3,{id:"new-deserialized",children:"new Deserialized()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"new Deserialized"}),"(",(0,r.jsx)(s.code,{children:"filepath"}),"?): ",(0,r.jsx)(s.a,{href:"/DBPF.js/docs/serde/classes/Deserialized",children:(0,r.jsx)(s.code,{children:"Deserialized"})})]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["\u2022 ",(0,r.jsx)(s.strong,{children:"filepath?"}),": ",(0,r.jsx)(s.code,{children:"string"})]}),"\n",(0,r.jsx)(s.p,{children:"The file path of the JSON file."}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/DBPF.js/docs/serde/classes/Deserialized",children:(0,r.jsx)(s.code,{children:"Deserialized"})})}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L108",children:"src/serde.ts:108"})}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"filepath",children:"filepath"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"private"})," ",(0,r.jsx)(s.strong,{children:"filepath"}),": ",(0,r.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The file path of the JSON file."}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L125",children:"src/serde.ts:125"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"log--name",children:"log / _name"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"private"})," ",(0,r.jsx)(s.code,{children:"readonly"})," ",(0,r.jsx)(s.strong,{children:"log_name"}),": ",(0,r.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The name of the class (for logging purposes)."}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L130",children:"src/serde.ts:130"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"from",children:"from()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"static"})," ",(0,r.jsx)(s.strong,{children:"from"}),": (...",(0,r.jsx)(s.code,{children:"args"}),") => ",(0,r.jsx)(s.code,{children:"any"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Transform an object into a Deserialized instance."}),"\n",(0,r.jsx)(s.p,{children:"Commonly used by child classes to ensure that the object conforms to the class structure."}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["\u2022 ...",(0,r.jsx)(s.strong,{children:"args"}),": ",(0,r.jsx)(s.code,{children:"any"}),"[]"]}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"any"})}),"\n",(0,r.jsx)(s.p,{children:"The transformed object."}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L203",children:"src/serde.ts:203"})}),"\n",(0,r.jsx)(s.h2,{id:"accessors",children:"Accessors"}),"\n",(0,r.jsx)(s.h3,{id:"json",children:"json"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"get"})," ",(0,r.jsx)(s.strong,{children:"json"}),"(): ",(0,r.jsx)(s.code,{children:"undefined"})," | ",(0,r.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The path to the underlying JSON file, if provided."}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"undefined"})," | ",(0,r.jsx)(s.code,{children:"string"})]}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L135",children:"src/serde.ts:135"})}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"load",children:"load()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"load"}),"(",(0,r.jsx)(s.code,{children:"new_path"}),"?): ",(0,r.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Load the JSON file."}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["\u2022 ",(0,r.jsx)(s.strong,{children:"new_path?"}),": ",(0,r.jsx)(s.code,{children:"string"})]}),"\n",(0,r.jsx)(s.p,{children:"The new file path to load, if different from the current file path."}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"boolean"})}),"\n",(0,r.jsx)(s.p,{children:"Whether the file was successfully loaded."}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L145",children:"src/serde.ts:145"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"save",children:"save()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"save"}),"(",(0,r.jsx)(s.code,{children:"new_path"}),"?): ",(0,r.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Save the JSON file."}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["\u2022 ",(0,r.jsx)(s.strong,{children:"new_path?"}),": ",(0,r.jsx)(s.code,{children:"string"})]}),"\n",(0,r.jsx)(s.p,{children:"The new file path to save, if different from the current file path."}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"boolean"})}),"\n",(0,r.jsx)(s.p,{children:"Whether the file was successfully saved."}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L172",children:"src/serde.ts:172"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"read",children:"read()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"static"})," ",(0,r.jsx)(s.strong,{children:"read"}),"(",(0,r.jsx)(s.code,{children:"filepath"}),"?): ",(0,r.jsx)(s.code,{children:"void"})," | ",(0,r.jsx)(s.a,{href:"/DBPF.js/docs/serde/classes/Deserialized",children:(0,r.jsx)(s.code,{children:"Deserialized"})})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"A static method to create a new Deserialized instance from a path"}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["\u2022 ",(0,r.jsx)(s.strong,{children:"filepath?"}),": ",(0,r.jsx)(s.code,{children:"string"})]}),"\n",(0,r.jsx)(s.p,{children:"The file path of the JSON file."}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"void"})," | ",(0,r.jsx)(s.a,{href:"/DBPF.js/docs/serde/classes/Deserialized",children:(0,r.jsx)(s.code,{children:"Deserialized"})})]}),"\n",(0,r.jsx)(s.p,{children:"The Deserialized instance."}),"\n",(0,r.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://github.com/anonhostpi/DBPF.js/blob/1489264c731ecd9a77273090b0c6a8a9709ac8e9/src/serde.ts#L245",children:"src/serde.ts:245"})})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1184:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var r=n(4041);const i={},d=r.createContext(i);function l(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);